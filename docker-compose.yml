services:
  mysql_db:
    image: mysql:latest
    container_name: mysql-server
#    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - /home/mysql/data:/var/lib/mysql
      - /home/mysql/conf.d:/etc/mysql/conf.d/
      - /home/mysql/initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p' , ${DATABASE_PASSWORD}]
    networks:
      - our_network

  spring-boot-app:
    container_name: back-server
    image: ${BACK_SERVER_IMAGE_NAME}:${BUILD_NUMBER} # 해당 명칭으로 이미지 생성
    environment:
      SPRING_PROFILE: prod
      SPRING_PORT: ${SPRING_PORT}
      DATABASE_URL: jdbc:mysql://mysql_db:3306/subnoti?serverTimezone=UTC&characterEncoding=UTF-8
      DATABASE_USERNAME : ${DATABASE_USERNAME}
      DATABASE_PASSWORD : ${DATABASE_PASSWORD}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${SPRING_PORT}:${SPRING_PORT}
    depends_on:
      mysql_db : # mysql_db에 의존성 존재
        condition: service_healthy # mysql_db 헬스체크 성공 시 해당 서비스 실행
    networks:
      - our_network

networks: # 네트워크 지정
  our_network:




